// Code generated by MockGen. DO NOT EDIT.
// Source: resultwrapper.go
//
// Generated by this command:
//
//	mockgen -source=resultwrapper.go -destination=mocks/resultwrapper.go
//

// Package mock_sql is a generated GoMock package.
package mock_sql

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockResultWrapper is a mock of ResultWrapper interface.
type MockResultWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockResultWrapperMockRecorder
}

// MockResultWrapperMockRecorder is the mock recorder for MockResultWrapper.
type MockResultWrapperMockRecorder struct {
	mock *MockResultWrapper
}

// NewMockResultWrapper creates a new mock instance.
func NewMockResultWrapper(ctrl *gomock.Controller) *MockResultWrapper {
	mock := &MockResultWrapper{ctrl: ctrl}
	mock.recorder = &MockResultWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResultWrapper) EXPECT() *MockResultWrapperMockRecorder {
	return m.recorder
}

// LastInsertId mocks base method.
func (m *MockResultWrapper) LastInsertId() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LastInsertId")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LastInsertId indicates an expected call of LastInsertId.
func (mr *MockResultWrapperMockRecorder) LastInsertId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastInsertId", reflect.TypeOf((*MockResultWrapper)(nil).LastInsertId))
}

// RowsAffected mocks base method.
func (m *MockResultWrapper) RowsAffected() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RowsAffected")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RowsAffected indicates an expected call of RowsAffected.
func (mr *MockResultWrapperMockRecorder) RowsAffected() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RowsAffected", reflect.TypeOf((*MockResultWrapper)(nil).RowsAffected))
}
